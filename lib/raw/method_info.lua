local attribute_info= require 'raw.attribute_info'

local method_info= {
    access_flag= {
        public=       0x0001, -- Declared public; may be accessed from outside its package.
        private=      0x0002, -- Declared private; accessible only within the defining class.
        protected=    0x0004, -- Declared protected; may be accessed within subclasses.
        static=       0x0008, -- Declared static.
        final=        0x0010, -- Declared final; must not be overridden (ยง5.4.5).
        synchronized= 0x0020, -- Declared synchronized; invocation is wrapped by a monitor use.
        bridge=       0x0040, -- A bridge method, generated by the compiler.
        varargs=      0x0080, -- Declared with variable number of arguments.
        native=       0x0100, -- Declared native; implemented in a language other than Java.
        abstract=     0x0400, -- Declared abstract; no implementation is provided.
        strict=       0x0800, -- Declared strictfp; floating-point mode is FP-strict.
        synthetic=    0x1000, -- Declared synthetic; not present in the source code.
    },
}

function method_info.new(reader)
    local access_flags=      reader.int16()
    local name_index=       reader.int16()
    local descriptor_index= reader.int16()
    local attributes_count= reader.int16()
    local attributes= {}

    while #(attributes) < attributes_count do
        local size= #(attributes)

        attributes[size + 1]= attribute_info.new(reader)
    end

    return {
        _access_flags=      access_flags,
        _name_index=       name_index,
        _descriptor_index= descriptor_index,
        _attributes_count= attributes_count,
        _attributes=       attributes,
    }
end

return method_info
